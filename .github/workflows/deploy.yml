name: Deploy to Amazon EC2

on:
  push:
    branches:
      - main

# 설정된 환경 변수
env:
  AWS_REGION: ap-northeast-2
  S3_BUCKET_NAME: my-github-actions-s3-bucket-aucison
  CODE_DEPLOY_APPLICATION_NAME: my-codedeploy-app
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: my-codedeploy-deployment-group

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      # (1) 기본 체크아웃
      - name: Checkout
        uses: actions/checkout@v3

      # (2) JDK 17 설정
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # (3-1) keystore.p12 파일 디코드
      - name: Decode keystore file
        run: echo "${{ secrets.KESTORE_P12_BASE64 }}" | base64 -d > keystore.p12


      # (3-2)keystore.p12 파일 디코드 후 적절한 위치로 이동
#      - name: Move keystore file to resources
#        run: mv keystore.p12 src/main/resources/

      # (4) Maven build (Test 제외)
      - name: Set Environment Variables and build with maven
        env:
          SSL_PASSWORD: ${{ secrets.SSL_PASSWORD }}
          DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          GOOGLE_CLIENTID: ${{ secrets.GOOGLE_CLIENTID }}
          GOOGLE_CLIENSECRET: ${{ secrets.GOOGLE_CLIENSECRET }}
          GOOGLE_REDIRECTURI: ${{ secrets.GOOGLE_REDIRECTURI }}
          IMG_AWS_ACCESSKEY: ${{ secrets.IMG_AWS_ACCESSKEY }}
          IMG_AWS_SECRETKEY: ${{ secrets.IMG_AWS_SECRETKEY }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
        run: mvn clean package -DskipTests


      # (5) AWS 인증
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # (6) 빌드 결과물과 appspec.yml을 포함하여 zip 파일 생성
      - name: Create deployment package
        run: zip -r deployment-package.zip target/* appspec.yml scripts/*

      # (7) zip 파일을 S3 버킷에 업로드
      - name: Upload deployment package to AWS S3
        run: aws s3 cp deployment-package.zip s3://$S3_BUCKET_NAME/$GITHUB_SHA.zip

      # (8) S3 버킷에 있는 파일을 대상으로 CodeDeploy 실행
      - name: Deploy to AWS EC2 from S3
        run: |
          aws deploy create-deployment \
            --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
            --deployment-config-name CodeDeployDefault.AllAtOnce \
            --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
            --s3-location bucket=$S3_BUCKET_NAME,key=$GITHUB_SHA.zip,bundleType=zip